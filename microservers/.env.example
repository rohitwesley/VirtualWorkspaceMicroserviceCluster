# @file .env.master
# @brief Environment configuration file

# Domain DNS Name
DOMAIN_NAME=domain.name.linked.to.host.IP
DOMAIN_EMAILID=email.ID.linked.to.domain.name
DOMAIN_SERVERID='/domain/server/Id'

# Docker Application 
DOCKER_APP=true

# Application Address (Nginx Reverse Proxy)
# @brief Host for the application to listen on
# This sets the Host Name on which the application listens for incoming connections.
# IMPORTANT MANUALY FILL THE IP 
# NGINX_HOST=localhost
# NGINX_HOST=127.0.0.1
# NGINX_HOST=0.0.0.0
NGINX_HOST=host.public.IP
# @brief Public Port for the application to listen on
NGINX_PORT_HTTP=8081
NGINX_PORT_HTTPS=443

# Environment variables for Ngrok
NGROK_REGION=us
NGROK_PORT_HTTP=8081
NGROK_PORT=80
# Ngrok Authentication
NGROK_AUTH_TOKEN='ngrokkey1234567890abcdefghijklmnopqrstuvwxyz'

# No-IP Authentication
NOIP_USERNAME='noip_username'
NOIP_PASSWORD='noip_password'
NOIP_HOSTNAME='noip.hostname.linked.to.domain.name'

# SSL Authentication
SSL_PATH='/path/to/local/ssl/folder'
SSL_VOL='/etc/nginx/ssl'
SSL_PASS='ssl_password'
SSL_KEY='your.ssl.key.here-key.pem'
SSL_CERT='your.ssl.certificate.here-crt.pem'
# Local SSL Folder when using individual microservers
USE_SSL=false

ML_HOST=your.server.host.local.IP
REDIS_HOST=your.server.host.local.IP
MEDIA_HOST=your.server.host.local.IP

# User Authentication
USE_AUTH=false
AUTH_USERNAME='username'
AUTH_PASSWORD='user_password'
# JWT Configuration
JWT_SECRET_KEY=your-shared-secret-key
JWT_ALGORITHM=HS256
JWT_ACCESS_TOKEN_EXPIRE_MINUTES=30

# WebNet Browser
WEBNET_HOST=your.server.host.local.IP
WEBNET_PORT=8182
WEBNET_MAC=02:42:ac:1c:00:02

# Media Folder
MEDIA_PATH='/path/to/local/ssl/folder'
# Comment the following line if not running dashboard microserver in a docker container
MEDIA_VOL=/DBmedia
DB_VIDEOS=/DBvideo
DB_IMAGES=/DBimage
DB_FILE=/DBfile
DB_ARCHIVES=/DBarchive

# Python ML 
CONDA_ENV_NAME='virtualworkspace-microserver'
# Environment Selection (Change between 'development'or 'production' for settings)
ML_ENVIRONMENT=development    
# For production in Docker
ML_PORT=8082 
# For development localy
FASTAPI_PORT=8300 
# For Live Jupiter Notebooks
NOTEBOOK_PORT=8400 
LOG_FILE=app.log
OPENAI_API_KEY="sk-YourOpenAIAPIKey"
OPENAI_ASSISTANT_ID="YourAssistantID"  
GOOGLE_API_KEY=your_google_api_key

# Dashboard NodeJs
MEDIA_PORT=8086
# Streams
WEBSOCKET_PORT=8087

# STUN/TURN - NAT Traversal Service 
TURN_PORT=3478
# TURNS_PORT=5349
TURN_MIN_PORT=49152
TURN_MAX_PORT=49172
TURN_PUBLIC_IP=your_public_ip_here
TURN_REALM=your_realm_here
TURN_SECRET=your_secret_key_here

# Redis
# Redis Insight GUI will always runs on a default ip 
# always check the port in the docker container is accesable cmds:
# 'docker ps'
# 'docker exec -it redisinsight-microserver printenv | grep REDISINSIGHT_PORT'
# 'docker exec -it redisinsight-microserver netstat -tuln'
# 'docker exec -it redisinsight-microserver lsof -i -P -n'
# 'docker exec -it redisinsight-microserver ps aux '
# then update port accordingly here
REDISINSIGHT_PORT=5540
# @brief Redis server password
# This sets the password required for clients to authenticate with the Redis server.
REDIS_PASSWORD='redis_password'
# @brief Redis server port
# This sets the port number on which the Redis server listens for incoming connections.
REDIS_PORT=6380
# @brief Redis database number
# This sets the default database number for this Redis instance.
REDIS_DB=0

# Redis Modules
# @brief Enable or disable RedisJSON module (1 to enable, 0 to disable)
# This setting enables or disables the RedisJSON module, which provides JSON support in Redis.
REDISJSON_ENABLED=1
# @brief Enable or disable RediSearch module (1 to enable, 0 to disable)
# This setting enables or disables the RediSearch module, which provides full-text search capabilities within Redis.
REDISSEARCH_ENABLED=1
# @brief Enable or disable RedisBloom module (1 to enable, 0 to disable)
# This setting enables or disables the RedisBloom module, which adds support for probabilistic data structures like Bloom filters and Count-Min Sketches to Redis.
REDISBLOOM_ENABLED=1
# @brief Enable or disable RedisGraph module (1 to enable, 0 to disable)
# This setting enables or disables the RedisGraph module, which adds support for graph database operations in Redis.
REDISGRAPH_ENABLED=1
# @brief Enable or disable RedisTimeSeries module (1 to enable, 0 to disable)
# This setting enables or disables the RedisTimeSeries module, which adds support for time series data structures in Redis.
REDISTIMESERIES_ENABLED=1
# @brief Enable or disable RedisAI module (1 to enable, 0 to disable)
# This setting enables or disables the RedisAI module, which adds support for AI and vector operations in Redis.
REDISAI_ENABLED=1

# Cache
# @brief Cache server host
# This sets the hostname or IP address of the cache server.
CACHE_HOST=${REDIS_HOST}
# @brief Cache server port
# This sets the port number on which the cache server listens for incoming connections.
CACHE_PORT=6380
# @brief Cache database number
# This sets the default database number for the cache server.
CACHE_DB=1

# PubSub
# @brief PubSub server host
# This sets the hostname or IP address of the PubSub server.
PUBSUB_HOST=${REDIS_HOST}
# @brief PubSub server port
# This sets the port number on which the PubSub server listens for incoming connections.
PUBSUB_PORT=6380
# @brief PubSub database number
# This sets the default database number for the PubSub server.
PUBSUB_DB=2

# Persistent data storage
# @brief Base path for data storage
# This sets the base directory path for storing data files.
DATA_PATH=./data
# @brief Path for Redis data storage
# This sets the directory path for storing Redis data files, such as AOF and RDB files.
REDIS_DATA_PATH=${DATA_PATH}/redis

# Backup
# @brief Base path for backup storage
# This sets the base directory path for storing backup files.
BACKUP_PATH=./backup
# @brief Path for Redis backup storage
# This sets the directory path for storing Redis backup files, such as AOF and RDB snapshots.
REDIS_BACKUP_PATH=${BACKUP_PATH}/redis

